{"version":3,"file":"XAlert-f4469909.js","sources":["../../src/02.components/XAlert/XAlert.styles.ts","../../src/02.components/XAlert/XAlert.tsx"],"sourcesContent":["import styled, { css } from 'styled-components'\nimport XAlertTypes from './XAlert.types'\nimport { XContainer } from '../XContainer/XContainer.styles'\nimport { XClose } from '../../01.icons/XClose/XClose.styles'\n\nconst Error = styled(XContainer)`\n  color: var(--color-error);\n  position: absolute;\n  bottom: 0;\n  transform: 0;\n  opacity: 0;\n  transition: transform 200ms ease-in-out, opacity 200ms ease-in-out; \n  min-width: 30.2rem;\n  text-align: center;\n  font-size: 1.2rem;\n`\n\nconst hasOpen = ({ isOpen = false }: Pick<XAlertTypes, 'isOpen'>) => isOpen && css`\n  opacity: 1;\n  z-index: 60;\n  transition: opacity 200ms 300ms ease-in-out;\n\n  & > ${XAlert} {\n    transform: translateY(0rem);\n    opacity: 1;\n  }\n`\n\nconst hasError = ({ errorMessage }: Pick<XAlertTypes, 'errorMessage'>) => errorMessage && css`\n  & ${Error} {\n    opacity: 1;\n    transform: translateY(calc(100% + var(--gap-small)));\n  }\n`\n\nconst hasSimpleWrapper = ({ simple }: Pick<XAlertTypes, 'simple'>) => simple && css`\n  & ${Error} {\n    transform: translateY(calc(100% + var(--gap-medium)));\n  }\n`\n\nexport const WrapperXAlert = styled.div<Pick<XAlertTypes, 'isOpen' | 'errorMessage' | 'simple'>>`\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  opacity: 0;\n  z-index: -1;\n  align-items: center;\n  justify-content: center;\n  transition: opacity 200ms 300ms ease-in-out, z-index 10ms 600ms linear;\n  \n  &::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-black-light);\n  }\n\n  ${hasOpen};\n  ${hasError};\n  ${hasSimpleWrapper};\n`\n\nconst XAlert = styled(XContainer)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n  min-width: 30.2rem;\n  min-height: 20rem;\n  padding: var(--gap-bigger);\n  transform: translateY(-10rem) scale(0.8);\n  opacity: 0;\n  transition: all 200ms ease-in-out;\n\n  & > ${XClose} {\n    position: absolute;\n    top: -1.85rem;\n    right: -1.84rem;\n    cursor: var(--cursor-pointer);\n    height: 3.4rem;\n    transition: transform 80ms ease-in-out;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n\n    &:active {\n      transition: transform 90ms ease-in-out;\n      transform: scale(0.98);\n    }\n  }\n`\n\nconst S = {\n  WrapperXAlert,\n  Error,\n  XAlert\n}\n\nexport default S","import Close from '../../01.icons/XClose'\nimport S from './XAlert.styles'\nimport XAlertTypes from './XAlert.types'\n\nconst hasError = ({ errorMessage, simple }: Pick<XAlertTypes, 'errorMessage' | 'simple'>) => (\n  errorMessage &&\n  <S.Error error simple={simple}>\n    {errorMessage}\n  </S.Error>\n)\n\nconst Alert = ({ children, handleClose, isOpen, errorMessage, iconClose = true, simple, primary, success, warning, error, disabled }: XAlertTypes) => (\n  <S.WrapperXAlert isOpen={isOpen} errorMessage={errorMessage} simple={simple}>\n    <S.XAlert simple={simple} primary={primary} success={success} warning={warning} error={error} disabled={disabled}>\n      {iconClose && <Close onClick={handleClose} />}\n      {children}\n\n      {hasError({ errorMessage, simple })}\n    </S.XAlert>\n  </S.WrapperXAlert>\n)\n\nexport default Alert"],"names":["Error","styled","XContainer","hasOpen","isOpen","css","XAlert","hasError","errorMessage","hasSimpleWrapper","simple","WrapperXAlert","XClose","S","jsx","Alert","children","handleClose","iconClose","primary","success","warning","error","disabled","jsxs","Close"],"mappings":"kLAKA,MAAMA,EAAQC,EAAOC,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYzBC,EAAU,CAAC,CAAE,OAAAC,EAAS,EAAA,IAAyCA,GAAUC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,QAKvEC,CAAM;AAAA;AAAA;AAAA;AAAA,EAMRC,EAAW,CAAC,CAAE,aAAAC,KAAsDA,GAAgBH;AAAAA,MACpFL,CAAK;AAAA;AAAA;AAAA;AAAA,EAMLS,EAAmB,CAAC,CAAE,OAAAC,KAA0CA,GAAUL;AAAAA,MAC1EL,CAAK;AAAA;AAAA;AAAA,EAKEW,EAAgBV,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAwBhCE,CAAO;AAAA,IACPI,CAAQ;AAAA,IACRE,CAAgB;AAAA,EAGdH,EAASL,EAAOC,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAaxBU,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBRC,EAAI,CACR,cAAAF,EACA,MAAAX,EAAA,OACAM,CACF,ECtGAC,EAAA,CAAA,CAAA,aAAAC,EAAA,OAAAE,CAAA,IAAAF,GAAAM,EAAAA,IAAAD,EAAA,MAAA,CAAA,MAAA,GAAA,OAAAH,EAAA,SAAAF,CAAA,CAAA,EAOAO,EAAA,CAAA,CAAA,SAAAC,EAAA,YAAAC,EAAA,OAAAb,EAAA,aAAAI,EAAA,UAAAU,EAAA,GAAA,OAAAR,EAAA,QAAAS,EAAA,QAAAC,EAAA,QAAAC,EAAA,MAAAC,EAAA,SAAAC,CAAA,IAAAT,MAAAD,EAAA,cAAA,CAAA,OAAAT,EAAA,aAAAI,EAAA,OAAAE,EAAA,SAAAc,EAAA,KAAAX,EAAA,OAAA,CAAA,OAAAH,EAAA,QAAAS,EAAA,QAAAC,EAAA,QAAAC,EAAA,MAAAC,EAAA,SAAAC,EAAA,SAAA,CAGOL,GAAAJ,EAAAA,IAAAW,EAAA,CAAA,QAAAR,CAAA,CAAA,EAA0CD,EAC1CT,EAAA,CAAA,aAAAC,EAAA,OAAAE,EAAA,CAEiC,CAAA,CAAA,CAAA,CAAA"}