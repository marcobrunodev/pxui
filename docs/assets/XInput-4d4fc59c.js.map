{"version":3,"file":"XInput-4d4fc59c.js","sources":["../../src/02.components/XInput/XInput.styles.ts","../../src/02.components/XInput/XInput.tsx"],"sourcesContent":["import styled, { css } from 'styled-components'\nimport XInputTypes from './XInput.types'\n\nconst hasDisabled = ({ disabled, simple }: Pick<XInputTypes, 'disabled' | 'simple'>) => (\n  (disabled && !simple && css`\n    border-image-source: var(--simple-border-image-source-disabled);\n    color: var(--color-disabled);\n  `) || (disabled && simple && css`\n    border-color: var(--color-disabled);\n    color: var(--color-disabled);\n  `)\n)\n\nconst hasError = ({ error, simple }: Pick<XInputTypes, 'error' | 'simple'>) => (\n  (error && !simple && css`\n    border-image-source: var(--simple-border-image-source-error);\n  `) || (error && simple && css`\n    border-color: var(--color-error);\n  `)\n)\n\nconst hasWarning = ({ warning, simple }: Pick<XInputTypes, 'warning' | 'simple'>) => (\n  (warning && !simple && css`\n    border-image-source: var(--simple-border-image-source-warning);\n  `) || (warning && simple && css`\n    border-color: var(--color-warning);\n  `)\n)\n\nconst hasSuccess = ({ success, simple }: Pick<XInputTypes, 'success' | 'simple'>) => (\n  (success && !simple && css`\n    border-image-source: var(--simple-border-image-source-success);\n  `) || (success && simple && css`\n    border-color: var(--color-success);\n  `)\n)\n\nconst hasPrimary = ({ primary, simple }: Pick<XInputTypes, 'primary' | 'simple'>) => (\n  (primary && !simple && css`\n    border-image-source: var(--simple-border-image-source-primary);\n  `) || (primary && simple && css`\n    border-color: var(--color-primary);\n  `)\n)\n\nconst hasSimple = ({ simple }: Pick<XInputTypes, 'simple'>) => simple && css`\n  border-image-slice: fill;\n  border-image-width: none;\n  border-image-repeat: stretch;\n  border-image-source: none;\n  border-image-outset: 0;\n  border-style: solid;\n  border-color: var(--color-white);\n`\n\nconst XInput = styled.input<XInputTypes>`\n  background-color: transparent;\n  border-image-slice: 2;\n  border-image-width: 2;\n  border-image-repeat: stretch;\n  border-image-source: var(--simple-border-image-source-white);\n  border-image-outset: 1;\n  border-style: solid;\n  border-width: var(--border-width);\n  font-family: 'FontPxRegular', sans-serif;\n  color: var(--colo-white);\n  padding: var(--gap-small);\n  transition: 100ms transform ease-in-out;\n\n  &:focus {\n    outline: none;\n    transform: scale(1.02);\n  }\n  \n  ${hasSimple};\n  ${hasPrimary};\n  ${hasSuccess};\n  ${hasWarning};\n  ${hasError};\n  ${hasDisabled};\n`\n\nconst S = {\n  XInput\n}\n\nexport default S","import XInputTypes from './XInput.types'\nimport S from './XInput.styles'\n\nconst XInput = (props: XInputTypes) => (\n  <S.XInput {...props} />\n)\n\nexport default XInput"],"names":["hasDisabled","disabled","simple","css","hasError","error","hasWarning","warning","hasSuccess","success","hasPrimary","primary","hasSimple","XInput","styled","S","props","jsx"],"mappings":"yEAGA,MAAMA,EAAc,CAAC,CAAE,SAAAC,EAAU,OAAAC,CAC9B,IAAAD,GAAY,CAACC,GAAUC;AAAAA;AAAAA;AAAAA,KAGjBF,GAAYC,GAAUC;AAAAA;AAAAA;AAAAA,IAMzBC,EAAW,CAAC,CAAE,MAAAC,EAAO,OAAAH,CACxB,IAAAG,GAAS,CAACH,GAAUC;AAAAA;AAAAA,KAEdE,GAASH,GAAUC;AAAAA;AAAAA,IAKtBG,EAAa,CAAC,CAAE,QAAAC,EAAS,OAAAL,CAC5B,IAAAK,GAAW,CAACL,GAAUC;AAAAA;AAAAA,KAEhBI,GAAWL,GAAUC;AAAAA;AAAAA,IAKxBK,EAAa,CAAC,CAAE,QAAAC,EAAS,OAAAP,CAC5B,IAAAO,GAAW,CAACP,GAAUC;AAAAA;AAAAA,KAEhBM,GAAWP,GAAUC;AAAAA;AAAAA,IAKxBO,EAAa,CAAC,CAAE,QAAAC,EAAS,OAAAT,CAC5B,IAAAS,GAAW,CAACT,GAAUC;AAAAA;AAAAA,KAEhBQ,GAAWT,GAAUC;AAAAA;AAAAA,IAKxBS,EAAY,CAAC,CAAE,OAAAV,KAA0CA,GAAUC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAUnEU,EAASC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAmBlBF,CAAS;AAAA,IACTF,CAAU;AAAA,IACVF,CAAU;AAAA,IACVF,CAAU;AAAA,IACVF,CAAQ;AAAA,IACRJ,CAAW;AAAA,EAGTe,EAAI,CAAA,OACRF,CACF,ECjFAA,EAAAG,GAAAC,EAAA,IAAAF,EAAA,OAAA,CAAA,GAAAC,EAAA"}