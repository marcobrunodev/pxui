{"version":3,"file":"XContainer.styles-01c46e77.js","sources":["../../src/02.components/XContainer/XContainer.styles.ts"],"sourcesContent":["import styled, { keyframes, css } from 'styled-components'\nimport XContainerTypes from './XContainer.types'\nimport XText from '../XText'\nimport XTextTypes from '../XText/XText.types'\n\nconst top = keyframes`\n  from {\n    transform: translateX(-100%);\n  }\n  to {\n    transform: translateX(100%);\n  }\n`\n\nconst right = keyframes`\n  from {\n    transform: translateY(-100%);\n  }\n  to {\n    transform: translateY(100%);\n  }\n`\n\nconst bottom = keyframes`\n  from {\n    transform: translateX(100%);\n  }\n  to {\n    transform: translateX(-100%);\n  }\n`\n\nconst left = keyframes`\n  from {\n    transform: translateY(100%);\n  }\n  to {\n    transform: translateY(-100%);\n  }\n`\n\nconst XTop = styled.span`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: var(--size-border);\n  height: var(--border-width);\n  background-color: var(--color-white);\n  transform: translateX(-100%);\n  animation: 3s ${top} linear infinite;\n`\n\nconst XRight = styled.span`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: var(--border-width);\n  height: var(--size-border);\n  background-color: var(--color-white);\n  transform: translateY(-100%);\n  animation: 3s 1.5s ${right} linear infinite;\n`\n\nconst XBottom = styled.span`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: var(--size-border);\n  height: var(--border-width);\n  background-color: var(--color-white);\n  transform: translateX(100%);\n  animation: 3s 3s ${bottom} linear infinite;\n`\n\nconst XLeft = styled.span`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: var(--border-width);\n  height: var(--size-border);\n  background-color: var(--color-white);\n  transform: translateY(100%);\n  animation: 3s 4.5s ${left} linear infinite;\n`\n\nconst hasCenter = ({ center }: Pick<XTextTypes, 'center'>) => center && css`\n  left: 50%;\n  transform: translateX(-50%);\n  margin-left: 0;\n`\n\nconst XTitle = styled(XText).attrs({ as: 'h2' })`\n  position: absolute;\n  margin-bottom: var(--gap-small);\n  margin-left: var(--gap-smaller);\n  background-color: var(--color-black);\n  padding:  0 var(--gap-medium);\n  font-size: 2rem;\n\n  ${hasCenter};\n`\n\nconst hasFull = ({ full }: Pick<XContainerTypes, 'full'>) => full && css`\n  box-sizing: border-box;\n  width: 100%;\n`\n\nconst hasTitleAttr = ({ titleAttr }: Pick<XContainerTypes, 'titleAttr'>) => titleAttr && css`\n  & > ${XTitle} {\n    top: -0.8em;\n  }\n`\n\nconst hasSimple = ({ simple }: Pick<XContainerTypes, 'simple'>) => simple && css`\n  border: var(--border-width) solid var(--color-white);\n`\n\nconst hasSimpleAndTitle = ({ simple, titleAttr }: Pick<XContainerTypes, 'simple' | 'titleAttr'>) => simple && titleAttr && css`\n  & > ${XTitle} {\n    top: -1em;\n  }\n`\n\nconst hasBorderAnimation = ({ borderAnimation, full }: Pick<XContainerTypes, 'borderAnimation' | 'full'>) => borderAnimation && !full && css`\n  border: 0;\n  overflow: hidden;\n  padding: var(--gap-medium) var(--gap-big);\n\n  & > ${XTitle} {\n    display: none;\n  }\n`\n\nconst hasPrimary = ({ primary, simple, borderAnimation, full }: Pick<XContainerTypes, 'primary' | 'simple' | 'borderAnimation' | 'full'>) => {\n  if (primary && simple && (!borderAnimation || full)) return css`\n    border-color: var(--color-primary)\n  `\n\n  if (primary) return css`\n    border-image-source: var(--border-image-source-primary);\n\n    & > :is(${XTop}, ${XRight}, ${XBottom}, ${XLeft}) {\n      background-color: var(--color-primary);\n    }\n  `\n}\n\nconst hasSuccess = ({ success, simple, borderAnimation, full }: Pick<XContainerTypes, 'success' | 'simple' | 'borderAnimation' | 'full'>) => {\n  if (success && simple && (!borderAnimation || full)) return css`\n    border-color: var(--color-success);\n  `\n\n  if (success) return css`\n    border-image-source: var(--border-image-source-success);\n\n    & > :is(${XTop}, ${XRight}, ${XBottom}, ${XLeft}) {\n      background-color: var(--color-success);\n    }\n  `\n\n}\n\nconst hasWarning = ({ warning, simple, borderAnimation, full }: Pick<XContainerTypes, 'warning' | 'simple' | 'borderAnimation' | 'full'>) => {\n  if (warning && simple && (!borderAnimation || full)) return css`\n    border-color: var(--color-warning);\n  `\n\n  if (warning) return css`\n    border-image-source: var(--border-image-source-warning);\n\n    & > :is(${XTop}, ${XRight}, ${XBottom}, ${XLeft}) {\n      background-color: var(--color-warning);\n    }\n  `\n}\n\nconst hasError = ({ error, simple, borderAnimation, full }: Pick<XContainerTypes, 'error' | 'simple' | 'borderAnimation' | 'full'>) => {\n  if (error && simple && (!borderAnimation || full)) return css`\n    border-color: var(--color-error);\n  `\n\n  if (error) return css`\n    border-image-source: var(--border-image-source-error);\n\n    & > :is(${XTop}, ${XRight}, ${XBottom}, ${XLeft}) {\n      background-color: var(--color-error);\n    }\n  `\n}\nconst hasDisabled = ({ disabled, simple, borderAnimation, full }: Pick<XContainerTypes, 'disabled' | 'simple' | 'borderAnimation' | 'full'>) => {\n  if (disabled && simple && (!borderAnimation || full)) return css`\n    border-color: var(--color-disabled);\n  `\n\n  if (disabled) return css`\n    border-image-source: var(--border-image-source-disabled);\n\n    & > :is(${XTop}, ${XRight}, ${XBottom}, ${XLeft}) {\n      background-color: var(--color-disabled);\n    }\n  `\n}\n\nexport const XContainer = styled.article<XContainerTypes>`\n  --size-border: 100%;\n\n  position: relative;\n  display: inline-block;\n  border-image-slice: 3;\n  border-image-width: 3;\n  border-image-repeat: stretch;\n  border-image-source: var(--border-image-source-white);\n  border-image-outset: 1;\n  border-style: solid;\n  border-width: var(--border-width);\n  padding: var(--gap-medium) var(--gap-big);\n  background-color: var(--color-black);\n\n  ${hasFull};\n  ${hasTitleAttr};\n  ${hasSimple}\n  ${hasBorderAnimation};\n  ${hasSimpleAndTitle};\n  ${hasPrimary};\n  ${hasSuccess};\n  ${hasWarning};\n  ${hasError};\n  ${hasDisabled};\n`\n\nconst S = {\n  XContainer,\n  XTitle,\n  XTop,\n  XRight,\n  XBottom,\n  XLeft\n}\n\nexport default S\n"],"names":["top","keyframes","right","bottom","left","XTop","styled","XRight","XBottom","XLeft","hasCenter","center","css","XTitle","XText","hasFull","full","hasTitleAttr","titleAttr","hasSimple","simple","hasSimpleAndTitle","hasBorderAnimation","borderAnimation","hasPrimary","primary","hasSuccess","success","hasWarning","warning","hasError","error","hasDisabled","disabled","XContainer","S"],"mappings":"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"}