{"version":3,"file":"XCheckbox.stories-1fe85f61.js","sources":["../../src/02.components/XCheckbox/XCheckbox.styles.ts","../../src/02.components/XCheckbox/XCheckbox.tsx"],"sourcesContent":["import styled, { css } from 'styled-components'\nimport XCheckboxTypes from './XCheckbox.types'\n\nconst Content = styled.span`\n  position: relative;\n  display: flex;\n  gap: var(--gap-small);\n  align-items: center;\n\n  &::before {\n    content: '';\n    height: 1.2rem;\n    width: 1.2rem;\n    border: 0.2rem solid var(--color-white);\n  }\n\n  &::after {\n    content: '';\n    height: 0.8rem;\n    width: 0.8rem;\n    background-color: var(--bullet-color);\n    position: absolute;\n    left: 0.4rem;\n    transform-origin: center;\n    transform: scale(0);\n    transition: 80ms transform ease-in-out;\n  }\n`\n\nconst CheckboxHtml = styled.input.attrs({ type: 'checkbox' })`\n  display: none;\n`\n\nconst hasPrimary = ({ primary }: Pick<XCheckboxTypes, 'primary'>) => primary && css`\n  --bullet-color: var(--color-primary);\n`\n\nconst hasSuccess = ({ success }: Pick<XCheckboxTypes, 'success'>) => success && css`\n  --bullet-color: var(--color-success);\n`\n\nconst hasWarning = ({ warning }: Pick<XCheckboxTypes, 'warning'>) => warning && css`\n  --bullet-color: var(--color-warning);\n`\n\nconst hasError = ({ error }: Pick<XCheckboxTypes, 'error'>) => error && css`\n  --bullet-color: var(--color-error);\n`\n\nconst hasDisabled = ({ disabled }: Pick<XCheckboxTypes, 'disabled'>) => disabled && css`\n  --bullet-color: var(--color-disabled);\n`\n\nconst XCheckbox = styled.label<Pick<XCheckboxTypes, 'primary' | 'success' | 'warning' | 'error' | 'disabled'>>`\n  --bullet-color: var(--color-white);\n  cursor: var(--cursor-pointer);\n\n  & > ${CheckboxHtml}:checked + ${Content}::after {\n    transform: scale(1);\n  }\n\n  ${hasPrimary};\n  ${hasSuccess};\n  ${hasWarning};\n  ${hasError};\n  ${hasDisabled};\n`\n\nexport default {\n  XCheckbox,\n  CheckboxHtml,\n  Content\n}\n","import XCheckboxTypes from './XCheckbox.types'\nimport S from './XCheckbox.styles'\n\nconst XCheckbox = ({ name, children, value, checked = false, onClick, primary, success, warning, error, disabled }: XCheckboxTypes) => (\n  <S.XCheckbox onClick={onClick} primary={primary} success={success} warning={warning} error={error} disabled={disabled}>\n    <S.CheckboxHtml name={name} value={value} checked={checked} />\n    <S.Content onClick={onClick}>{children}</S.Content>\n  </S.XCheckbox>\n)\n\nexport default XCheckbox"],"names":["Content","styled","CheckboxHtml","hasPrimary","primary","css","hasSuccess","success","hasWarning","warning","hasError","error","hasDisabled","disabled","XCheckbox","S","name","children","value","checked","onClick","jsxs","jsx"],"mappings":"iJAGA,MAAMA,EAAUC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BjBC,EAAeD,EAAO,MAAM,MAAM,CAAE,KAAM,WAAY;AAAA;AAAA,EAItDE,EAAa,CAAC,CAAE,QAAAC,KAA+CA,GAAWC;AAAAA;AAAAA,EAI1EC,EAAa,CAAC,CAAE,QAAAC,KAA+CA,GAAWF;AAAAA;AAAAA,EAI1EG,EAAa,CAAC,CAAE,QAAAC,KAA+CA,GAAWJ;AAAAA;AAAAA,EAI1EK,EAAW,CAAC,CAAE,MAAAC,KAA2CA,GAASN;AAAAA;AAAAA,EAIlEO,EAAc,CAAC,CAAE,SAAAC,KAAiDA,GAAYR;AAAAA;AAAAA,EAI9ES,EAAYb,EAAO;AAAA;AAAA;AAAA;AAAA,QAIjBC,CAAY,cAAcF,CAAO;AAAA;AAAA;AAAA;AAAA,IAIrCG,CAAU;AAAA,IACVG,CAAU;AAAA,IACVE,CAAU;AAAA,IACVE,CAAQ;AAAA,IACRE,CAAW;AAAA,EAGAG,EAAA,CAAA,UACbD,EACA,aAAAZ,EACA,QAAAF,CACF,ECrEAc,EAAA,CAAA,CAAA,KAAAE,EAAA,SAAAC,EAAA,MAAAC,EAAA,QAAAC,EAAA,GAAA,QAAAC,EAAA,QAAAhB,EAAA,QAAAG,EAAA,QAAAE,EAAA,MAAAE,EAAA,SAAAE,CAAA,IAAAQ,EAAA,KAAAN,EAAA,UAAA,CAAA,QAAAK,EAAA,QAAAhB,EAAA,QAAAG,EAAA,QAAAE,EAAA,MAAAE,EAAA,SAAAE,EAAA,SAAA,CAEIS,EAAA,IAAAP,EAAA,aAAA,CAAA,KAAAC,EAAA,MAAAE,EAAA,QAAAC,EAAA,EAA4DG,EAAAA,IAAAP,EAAA,QAAA,CAAA,QAAAK,EAAA,SAAAH,CAAA,CAAA,CACrB,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}